package test;

import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

public class DotTestListener implements ITestListener {
	
	@Override
	  public void onTestStart(ITestResult result) {
		System.out.println("getName_onTestStart "+result.getName());
		System.out.println("getName_getStartMillis "+result.getStartMillis());
		    // not implemented
		  }

		  /**
		   * Invoked each time a test succeeds.
		   *
//		   * @param result <code>ITestResult</code> containing information about the run test
//		   * @see ITestResult#SUCCESS
//		   */
//	@Override
//		  public void onTestSuccess(ITestResult result) {
//		System.out.println(result.getName());
//		System.out.println(result.getStartMillis());
//		    // not implemented
//		  }
//
//		  /**
//		   * Invoked each time a test fails.
//		   *
//		   * @param result <code>ITestResult</code> containing information about the run test
//		   * @see ITestResult#FAILURE
//		   */
//	@Override
//	public void onTestFailure(ITestResult result) {
//		    // not implemented
//		System.out.println(result.getName());
//		System.out.println(result.getStartMillis());
//		  }
//
//		  /**
//		   * Invoked each time a test is skipped.
//		   *
//		   * @param result <code>ITestResult</code> containing information about the run test
//		   * @see ITestResult#SKIP
//		   */
//	@Override
//	public void onTestSkipped(ITestResult result) {
//		    // not implemented
//		System.out.println(result.getName());
//		System.out.println(result.getStartMillis());
//		  }
//
//		  /**
//		   * Invoked each time a method fails but has been annotated with successPercentage and this failure
//		   * still keeps it within the success percentage requested.
//		   *
//		   * @param result <code>ITestResult</code> containing information about the run test
//		   * @see ITestResult#SUCCESS_PERCENTAGE_FAILURE
//		   */
//	@Override
//	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
//		    // not implemented
//		System.out.println(result.getName());
//		System.out.println(result.getStartMillis());
//		  }
//
//		  /**
//		   * Invoked each time a test fails due to a timeout.
//		   *
//		   * @param result <code>ITestResult</code> containing information about the run test
//		   */
//	@Override
//	public void onTestFailedWithTimeout(ITestResult result) {
//		    onTestFailure(result);
//		    System.out.println(result.getName());
//			System.out.println(result.getStartMillis());
//		  }
//
//		  /**
//		   * Invoked before running all the test methods belonging to the classes inside the &lt;test&gt;
//		   * tag and calling all their Configuration methods.
//		   *
//		   * @param context The test context
//		   */
//	@Override
//	public void onStart(ITestContext context) {
//		System.out.println(context.getPassedTests());
//		System.out.println(context.getFailedTests());
//		    // not implemented
//		  }
//
//		  /**
//		   * Invoked after all the test methods belonging to the classes inside the &lt;test&gt; tag have
//		   * run and all their Configuration methods have been called.
//		   *
//		   * @param context The test context
//		   */
//	@Override
//	public void onFinish(ITestContext context) {
//		    // not implemented
//		System.out.println(context.getPassedTests());
//		System.out.println(context.getFailedTests());
//		  }

}
